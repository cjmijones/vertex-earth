[
  {
    "objectID": "security_data_handler.html",
    "href": "security_data_handler.html",
    "title": "Interactive Globe Story",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\nimport missingno as msno\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\nsecurity_df = pd.read_csv(\"./datasets/security_incidents.csv\")\n\n\nsecurity_df.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 4337 entries, 0 to 4336\nData columns (total 41 columns):\n #   Column                    Non-Null Count  Dtype  \n---  ------                    --------------  -----  \n 0   Incident ID               4337 non-null   int64  \n 1   Year                      4337 non-null   int64  \n 2   Month                     4289 non-null   float64\n 3   Day                       3957 non-null   float64\n 4   Country Code              4304 non-null   object \n 5   Country                   4332 non-null   object \n 6   Region                    3970 non-null   object \n 7   District                  3601 non-null   object \n 8   City                      3349 non-null   object \n 9   UN                        4337 non-null   int64  \n 10  INGO                      4337 non-null   int64  \n 11  ICRC                      4328 non-null   float64\n 12  NRCS and IFRC             4328 non-null   float64\n 13  NNGO                      4328 non-null   float64\n 14  Other                     4337 non-null   int64  \n 15  Nationals killed          4337 non-null   int64  \n 16  Nationals wounded         4337 non-null   int64  \n 17  Nationals kidnapped       4337 non-null   int64  \n 18  Total nationals           4337 non-null   int64  \n 19  Internationals killed     4337 non-null   int64  \n 20  Internationals wounded    4337 non-null   int64  \n 21  Internationals kidnapped  4337 non-null   int64  \n 22  Total internationals      4337 non-null   int64  \n 23  Total killed              4337 non-null   int64  \n 24  Total wounded             4337 non-null   int64  \n 25  Total kidnapped           4337 non-null   int64  \n 26  Total affected            4337 non-null   int64  \n 27  Gender Male               4337 non-null   int64  \n 28  Gender Female             4337 non-null   int64  \n 29  Gender Unknown            4337 non-null   int64  \n 30  Means of attack           4337 non-null   object \n 31  Attack context            4337 non-null   object \n 32  Location                  4337 non-null   object \n 33  Latitude                  4324 non-null   float64\n 34  Longitude                 4324 non-null   float64\n 35  Motive                    4333 non-null   object \n 36  Actor type                4337 non-null   object \n 37  Actor name                4329 non-null   object \n 38  Details                   4337 non-null   object \n 39  Verified                  4336 non-null   object \n 40  Source                    4337 non-null   object \ndtypes: float64(7), int64(20), object(14)\nmemory usage: 1.4+ MB\n\n\n\n# Filter out rows missing lat or long\ninitial_rows = len(security_df)\nfiltered_df = security_df.dropna(subset=['Latitude', 'Longitude'])\nfiltered_df = filtered_df[filtered_df[\"Year\"] &lt; 2025]\nfiltered_rows = len(filtered_df)\n\n# Print metrics\nprint(f\"Initial rows: {initial_rows}\")\nprint(f\"Rows after filtering: {filtered_rows}\")\nprint(f\"Rows removed: {initial_rows - filtered_rows}\")\n\n# Generate and show missingness plot for the remaining data\nmsno.matrix(filtered_df)\nplt.title(\"Missing Data Matrix for Filtered Data\")\nplt.show()\n\nInitial rows: 4337\nRows after filtering: 4277\nRows removed: 60\n\n\n\n\n\n\n\n\n\n\n# simple_df = filtered_df.iloc[10:200] \n# simple_df\n# simple_df.to_csv('./datasets/simple.csv', index=False)\n\nfiltered_df.to_csv('./datasets/filtered_security_df.csv', index=False)\n\n\n# Basic structure and missing data inspection\nsummary = {\n    \"columns\": filtered_df.columns.tolist(),\n    \"missing_values\": filtered_df.isnull().sum(),\n    \"data_types\": filtered_df.dtypes,\n    \"sample\": filtered_df.sample(5, random_state=42)\n}\n\n# Yearly incident counts\nyearly_counts = filtered_df['Year'].value_counts().sort_index()\n\n# Total affected by year\naffected_by_year = filtered_df.groupby('Year')[[\n    'Total affected', 'Total killed', 'Total wounded', 'Total kidnapped'\n]].sum().reset_index()\n\n# Gender-based totals per year\ngender_by_year = filtered_df.groupby('Year')[[\n    'Gender Male', 'Gender Female', 'Gender Unknown'\n]].sum().reset_index()\n\n# Country-level incidents\ncountry_counts = filtered_df['Country'].value_counts().head(15)\n\n# Attack contexts\ncontext_counts = filtered_df['Attack context'].value_counts().head(10)\n\n# Actor types\nactor_counts = filtered_df['Actor type'].value_counts().head(10)\n\n\n\nsns.set(style=\"whitegrid\")\n\n# 1. Incident count over time\nplt.figure(figsize=(10, 5))\nsns.lineplot(x=yearly_counts.index, y=yearly_counts.values, marker=\"o\")\nplt.title(\"Total Number of Security Incidents by Year\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"Incident Count\")\nplt.xticks(rotation=45)\nplt.tight_layout()\nplt.show()\n\n# 2. Total affected, killed, wounded, kidnapped over time\nplt.figure(figsize=(12, 6))\nmelted_affected = affected_by_year.melt(id_vars=\"Year\", var_name=\"Impact Type\", value_name=\"Count\")\nsns.lineplot(data=melted_affected, x=\"Year\", y=\"Count\", hue=\"Impact Type\", marker=\"o\")\nplt.title(\"Yearly Impact: Affected, Killed, Wounded, Kidnapped\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"Count\")\nplt.legend(title=\"Impact Type\")\nplt.tight_layout()\nplt.show()\n\n# 3. Gender breakdown over time\nplt.figure(figsize=(12, 6))\nmelted_gender = gender_by_year.melt(id_vars=\"Year\", var_name=\"Gender\", value_name=\"Count\")\nsns.lineplot(data=melted_gender, x=\"Year\", y=\"Count\", hue=\"Gender\", marker=\"o\")\nplt.title(\"Gender Breakdown of Victims Over Time\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"Count\")\nplt.legend(title=\"Gender\")\nplt.tight_layout()\nplt.show()\n\n# 4. Top 15 countries by total incident count\nplt.figure(figsize=(10, 6))\nsns.barplot(y=country_counts.index, x=country_counts.values)\nplt.title(\"Top 15 Countries by Incident Count\")\nplt.xlabel(\"Incident Count\")\nplt.ylabel(\"Country\")\nplt.tight_layout()\nplt.show()\n\n# 5. Organization involvement over time\n# Sum all org columns by year\norg_columns = ['UN', 'INGO', 'ICRC', 'NRCS and IFRC', 'NNGO', 'Other']\norg_by_year = filtered_df.groupby('Year')[org_columns].sum().reset_index()\n\n# Melt for plotting\nmelted_orgs = org_by_year.melt(id_vars=\"Year\", var_name=\"Organization\", value_name=\"Incident Count\")\n\n# Plot\nplt.figure(figsize=(12, 6))\nsns.lineplot(data=melted_orgs, x=\"Year\", y=\"Incident Count\", hue=\"Organization\", marker=\"o\")\nplt.title(\"Incidents Involving Organizations Over Time\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"Incident Count\")\nplt.legend(title=\"Organization\")\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 1. Create a pivot table: Actor Type vs. Organization\nactor_org_matrix = pd.DataFrame(0, index=filtered_df[\"Actor type\"].unique(), columns=org_columns)\n\n# Fill in co-occurrence counts\nfor org in org_columns:\n    sub_df = filtered_df[filtered_df[org] &gt; 0]\n    counts = sub_df[\"Actor type\"].value_counts()\n    actor_org_matrix.loc[counts.index, org] = counts.values\n\n# Clean and remove low frequency actor types\nactor_org_matrix = actor_org_matrix.loc[actor_org_matrix.sum(axis=1) &gt; 5]\n\n# 2. Create an Org vs. Impact matrix (sum values per org)\n# Melt organizations first\norg_melted = filtered_df.melt(id_vars=[\n    'Total killed', 'Total wounded', 'Total kidnapped', 'Total affected'\n], value_vars=org_columns, var_name=\"Organization\", value_name=\"Present\")\n\n# Filter only rows where org was involved\norg_melted = org_melted[org_melted[\"Present\"] &gt; 0]\n\n# Group and sum impact columns by organization\nimpact_matrix = org_melted.groupby(\"Organization\")[[\n    'Total killed', 'Total wounded', 'Total kidnapped', 'Total affected'\n]].sum()\n\n# Plot heatmap: Actor type vs. Organization\nplt.figure(figsize=(10, 8))\nsns.heatmap(actor_org_matrix, cmap=\"Blues\", linewidths=0.5, annot=True, fmt=\"d\")\nplt.title(\"Heatmap: Actor Type Targeting of Organizations\")\nplt.xlabel(\"Organization\")\nplt.ylabel(\"Actor Type\")\nplt.tight_layout()\nplt.show()\n\n# Plot heatmap: Organization vs. Impact\nplt.figure(figsize=(8, 6))\nsns.heatmap(impact_matrix, cmap=\"Reds\", linewidths=0.5, annot=True, fmt=\"d\")\nplt.title(\"Heatmap: Impact by Organization (Killed, Wounded, Kidnapped, Affected)\")\nplt.xlabel(\"Impact Type\")\nplt.ylabel(\"Organization\")\nplt.tight_layout()\nplt.show()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Interactive 3D Globe",
    "section": "",
    "text": "ðŸŒ€ Globe Rotation  No Rotation  Slow Rotation  Fast Rotation"
  }
]